
# Database subcharts parameters.
# To test perforator you can enable postgresql, clickhouse, minio subcharts.

postgresql:
  # Enable the PostgreSQL helm subchart.
  enabled: true
  commonAnnotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-20"
  auth:
    # Assign a password to the "postgres" admin user.
    enablePostgresUser: true
    # Name for a custom user to create.
    username: perforator
    # Password for the custom user to create.
    password: perforator
    # Name for a custom database to create.
    database: perforator
    # Name of existing secret to use for PostgreSQL credentials.
    existingSecret: ""

  tls:
    # Enable TLS traffic support.
    enabled: true
    # Generate automatically self-signed TLS certificates.
    autoGenerated: true

  # PostgreSQL architecture (`standalone` or `replication`).
  architecture: standalone
  primary:
    # Set PostgreSQL container requests and limits for resources.
    resources: {}

clickhouse:
  # Enable the PostgreSQL helm subchart.
  enabled: true
  commonAnnotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-20"  
  auth:
    # ClickHouse Admin username.
    username: "perforator"
    # ClickHouse Admin password.
    password: "perforator"

  # Dictionary of initdb scripts.
  initdbScripts:
    create_perforator_db.sh: |
      #!/bin/bash
      set -e
      clickhouse-client \
        --user="${CLICKHOUSE_ADMIN_USER}" \
        --password="${CLICKHOUSE_ADMIN_PASSWORD}" \
        --query="CREATE DATABASE IF NOT EXISTS perforator"
  
  tls:
    # Enable TLS traffic support.
    enabled: true
    # Generate automatically self-signed TLS certificates.
    autoGenerated: true

  zookeeper:
    # Deploy Zookeeper subchart.
    enabled: false

  keeper:
    # Deploy ClickHouse keeper.
    enabled: true

  # Set ClickHouse container requests and limits for resources.
  resources: {}

minio:
  # Enable the MinIO helm subchart.
  enabled: true
  commonAnnotations:
    helm.sh/hook: pre-install,pre-upgrade
    helm.sh/hook-weight: "-20"
  auth:
    # Root username.
    rootUser: perforator
    # Password for root user.
    rootPassword: perforator
    # Name of an existing secret containing credentials.
    existingSecret: ""
  # Buckets to create,
  defaultBuckets: "perforator-profile, perforator-binary, perforator-task-results, perforator-binary-gsym"

  provisioning:
    # Enable minio provisioning job.
    enabled: true
    # Allow downloads in order for the UI to work.
    extraCommands:
      - "mc anonymous set download provisioning/perforator-task-results"

  tls:
    # Enable minio TLS support.
    enabled: true
    # Generate automatically self-signed TLS certificates.
    autoGenerated: true
    # Set minio container requests and limits for resources.
    resources: {}